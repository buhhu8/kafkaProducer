version: "3"
services:
  postgres:
    image: postgres:latest
    networks:
      - inner
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 5433:5432
    environment:
      - POSTGRES_PASSWORD=0280829Denis
      - POSTGRES_USER=postgres
      - POSTGRES_DB=task-app

  zoo:
    image: zookeeper:3.4.9
    networks:
      - inner
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./kafka/zoo/data:/data
      - ./kafka/zoo/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka
    networks:
      - inner
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/kafka/data:/var/lib/kafka/data
    depends_on:
      - zoo

  # APP*****************************************
  springbootapp:
    build: .
    networks:
      - inner
    container_name: task-app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/task-app
    ports:
      - 8080:5698
    depends_on:
      - postgres
      - kafka
    links:
      - postgres
volumes:
  postgres-data:
    driver: local

networks:
  inner:
    driver: bridge